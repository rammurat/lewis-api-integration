// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Error page snapshot 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "subscribe": [Function],
      },
      "subscription": Object {
        "addNestedSub": [Function],
        "getListeners": [Function],
        "handleChangeWrapper": [Function],
        "isSubscribed": [Function],
        "notifyNestedSubs": [Function],
        "onStateChange": [Function],
        "trySubscribe": [Function],
        "tryUnsubscribe": [Function],
      },
    }
  }
>
  <Connect(ProductDetails)
    errMsg="There is an error from server"
    isLoading={false}
    isNoResult={true}
    productDetails={Array []}
  />
</ContextProvider>
`;

exports[`Loading product snapshot 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "subscribe": [Function],
      },
      "subscription": Object {
        "addNestedSub": [Function],
        "getListeners": [Function],
        "handleChangeWrapper": [Function],
        "isSubscribed": [Function],
        "notifyNestedSubs": [Function],
        "onStateChange": [Function],
        "trySubscribe": [Function],
        "tryUnsubscribe": [Function],
      },
    }
  }
>
  <Connect(ProductDetails)
    errMsg=""
    isLoading={false}
    isNoResult={false}
    productDetails={
      Object {
        "currencySign": "Â£",
        "priceNow": "20",
        "title": "product A",
      }
    }
  />
</ContextProvider>
`;

exports[`Loading state snapshot 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "subscribe": [Function],
      },
      "subscription": Object {
        "addNestedSub": [Function],
        "getListeners": [Function],
        "handleChangeWrapper": [Function],
        "isSubscribed": [Function],
        "notifyNestedSubs": [Function],
        "onStateChange": [Function],
        "trySubscribe": [Function],
        "tryUnsubscribe": [Function],
      },
    }
  }
>
  <Connect(ProductDetails)
    errMsg=""
    isLoading={true}
    isNoResult={false}
    productDetails={Array []}
  />
</ContextProvider>
`;
